USE AILEN_ESTILISTA ; 

-- ESTE STORED PRODUCER SIRVE PARA ORDENAR LA COLUMNA QUE SE REQUIERA EN ORDERN DESC O ASC ---

drop procedure  if exists SP_ORDENAR_PRODUCTOS ; 
 DELIMITER //
CREATE PROCEDURE SP_ORDENAR_PRODUCTOS (INOUT PARAM_ORDER VARCHAR(32),INOUT PARAM_ASC_DESC VARCHAR(32))
BEGIN

  SET @t1 =  CONCAT('SELECT * FROM PRODUCTOS U ORDER BY',' ',PARAM_ORDER,' ',PARAM_ASC_DESC);
  PREPARE param_stmt FROM @t1   ;
  EXECUTE param_stmt;  
  DEALLOCATE PREPARE param_stmt;
END //
DELIMITER ;

-- DEJO UN EJEMPLO QUE SE PUEDE HACER CON ESTE PROCEDIMIENTO-- 

-- SELECT * FROM PRODUCTOS ; 
-- SET @PARAM_ORDER = 'STOCK'; 
-- SET @PARAM_ASC_DESC = 'DESC'; 
-- CALL SP_ORDENAR_PRODUCTOS (@PARAM_ORDER ,@PARAM_ASC_DESC);

-- A CONTINUACION EL STORED PRODUCER PARA INSERT INFORMACION DE LA TABLA PEDIDOS --

drop procedure  if exists SP_INSERT_PEDIDOS ; 
 DELIMITER //
 CREATE PROCEDURE SP_INSERT_PEDIDOS (INOUT PARAM_CLIENTES INT,
                                     INOUT PARAM_PRODUCTO INT,
                                     INOUT PARAM_CANTIDAD INT )
BEGIN
INSERT INTO  PEDIDOS (ID_CLIENTES, ID_PRODUCTO, CANTIDAD) 
VALUES (@PARAM_CLIENTES, @PARAM_PRODUCTO, @PARAM_CANTIDAD );

END //
DELIMITER ;

-- EJEMPLO PARA ESTE PROCEDIMIENTO-- 

-- SET @PARAM_CLIENTES = 13 ; 
-- SET @PARAM_PRODUCTO =10 ;
-- SET @PARAM_CANTIDAD =1 ;
-- CALL SP_INSERT_PEDIDOS (@PARAM_CLIENTES, @PARAM_PRODUCTO, @PARAM_CANTIDAD) ; 

-- SELECT * FROM PEDIDOS ; 


